@using PresentationLayer.Models.dbModels
@model PresentationLayer.Models.dbModels.News

@{
    ViewBag.Title = "title";
}

<div id="app" class="container">




    @using (Html.BeginForm("Create", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))

    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.ChampionshipId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.LabelFor(model => model.MatchId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.LabelFor(model => model.NewsHeading, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.LabelFor(model => model.NewsDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            @Html.LabelFor(model => model.Stars, htmlAttributes: new { @class = "control-label col-md-2" })
                        </th>
                        <th>
                            Photo
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.DropDownListFor(model => model.ChampionshipId, (IEnumerable<SelectListItem>)ViewBag.Championships, new { @class = "form-control" })
                        </td>
                        <td>
                            <select class="form-control" id="@Html.IdFor(model => model.MatchId)" name="@Html.IdFor(model => model.MatchId)">
                                <option v-for="item in matches" v-bind:value="item.Value">{{item.Text}}</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.MatchId, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.NewsHeading, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Stars, "", new { @class = "text-danger" })

                        </td>
                        <td>
                            @Html.TextAreaFor(model => model.NewsDescription, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Stars, "", new { @class = "text-danger" })

                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.Stars, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Stars, "", new { @class = "text-danger" })


                        </td>
                        <td>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <input required type='file' id="file" name="file" class="form-control" accept="image/*" />
                                </div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="">
                <div class="col-md-offset-2 col-md-2">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <hr />
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section scripts
{
    <script>

        var app = new Vue({
            el: '#app',
            data: {
                matches:[],
            },
            created: function () {
                $("#@Html.IdFor(o => o.ChampionshipId)").attr("v-on:change", "ChampionshipChanged($event)");
                if ($("#@Html.IdFor(o => o.ChampionshipId)").val()) {
                    $.ajax({
                        url: '@Url.Action("ChampionshipMatches" , "News")?id=' + $("#@Html.IdFor(o=> o.ChampionshipId)").val(),
                        data: {
                            format: 'json'
                        },
                        success: function(data) {
                            for (var i = 0; i < data.length; i++) {
                                app.matches.push(data[i]);
                            }
                        },
                        type: 'GET'
                    });
                }

            },
            methods:
            {
                ChampionshipChanged:function(e) {
                    var SelectedChampionshipId = e.target.value;
                    if (SelectedChampionshipId) {
                        $.ajax({
                            url: '@Url.Action("ChampionshipMatches" , "News")?id=' + SelectedChampionshipId,
                            data: {
                                format: 'json'
                            },
                            success: function(data) {
                                for (var i = 0; i < data.length; i++) {
                                    app.matches.push(data[i]);
                                }
                            },
                            type: 'GET'
                        });
                    }
                }
            }
        });
    </script>
}
