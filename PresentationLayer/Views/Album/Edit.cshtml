@using PresentationLayer.Models.dbModels
@using PresentationLayer.Resources
@model PresentationLayer.Models.dbModels.Album

@{
    ViewBag.Title = Resources.Gallery;
    }

<div id="app" class="container">




    @using (Html.BeginForm("Edit", "Album", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <table class="table">
                <thead>
                <tr>
                    <th>
                        @Html.LabelFor(model =>new Championship().ChampName , htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.LabelFor(model => model.MatchId, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.LabelFor(model => model.NewsId, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.LabelFor(model => model.AlbumName, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>photo</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>
                        @Html.DropDownListFor(model => new Championship().ChampName, (IEnumerable<SelectListItem>)ViewBag.Championships, new { @class = "form-control"  })
                    </td>
                    <td>
                        <select v-model="match" class = "form-control" id="@Html.IdFor(model => model.MatchId)" name="@Html.IdFor(model => model.MatchId)">
                            <option v-for="item in matches" v-bind:value="item.Value">{{item.Text}}</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.MatchId, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.NewsId, (IEnumerable<SelectListItem>)ViewBag.News, new { @class = "form-control"  })
                        @Html.ValidationMessageFor(model => model.NewsId, "", new { @class = "text-danger" })

                    </td>
                    <td>
                        @Html.EditorFor(model => model.AlbumName, new { @class = "form-control"  })
                        @Html.ValidationMessageFor(model => model.AlbumName, "", new {@class = "text-danger"})

                    </td>
                    <td>
                        <div class="col-md-6">
                            <div class="form-group">
                                <input type='file' id="file" name="file" class="form-control" accept="image/*"  />
                            </div>
                        </div>
                    </td>
                </tr>
                </tbody>
            </table>
            <div class="">
                <div class="col-md-offset-2 col-md-2">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <hr />
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section scripts
{
    <script>
        var app = new Vue({
            el: '#app',
            data: {
                matches: [],
                match:''
            },
            created: function () {
                $("#@Html.IdFor(o=> new Championship().ChampName)").attr("v-on:change", "ChampionshipChanged($event)");
                if ($("#@Html.IdFor(o=> new Championship().ChampName)").val()) {
                    $.ajax({
                        url: '@Url.Action("ChampionshipMatches" , "Album")?id=' + $("#@Html.IdFor(o=> new Championship().ChampName)").val(),
                        data: {
                            format: 'json'
                        },
                        success: function (data) {
                            var match = @Model.MatchId;
                            app.match = match;
                            for (var i = 0; i < data.length; i++) {
                                if (data[i].Value == match) {
                                    data[i].Selected = true;
                                }
                                app.matches.push(data[i]);
                            }
                        },
                        type: 'GET'
                    });
                }

            },
            methods:
            {
                ChampionshipChanged:function(e) {
                    var SelectedChampionshipId = e.target.value;
                    if (SelectedChampionshipId) {
                        $.ajax({
                            url: '@Url.Action("ChampionshipMatches" , "Album")?id=' + SelectedChampionshipId,
                            data: {
                                format: 'json'
                            },
                            success: function (data) {
                                var match = @Model.MatchId;
                                app.match = match;
                                for (var i = 0; i < data.length; i++) {
                                    if (data[i].Value == match) {
                                        data[i].Selected = true;
                                    }
                                    app.matches.push(data[i]);
                                }
                            },
                            type: 'GET'
                        });
                    }
                }
            }
        });
    </script>
}
